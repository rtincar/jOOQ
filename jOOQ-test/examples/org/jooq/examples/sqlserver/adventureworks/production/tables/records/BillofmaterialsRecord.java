/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.production.tables.records;

/**
 * This class is generated by jOOQ.
 */
public class BillofmaterialsRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.production.tables.records.BillofmaterialsRecord> {

	private static final long serialVersionUID = 723406618;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setBillofmaterialsid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.BILLOFMATERIALSID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.lang.Integer getBillofmaterialsid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.BILLOFMATERIALSID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.ProductAssemblyID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	public void setProductassemblyid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.PRODUCTASSEMBLYID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.ProductAssemblyID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	public java.lang.Integer getProductassemblyid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.PRODUCTASSEMBLYID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.ProductAssemblyID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.production.tables.records.ProductRecord fetchProductByProductassemblyid() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.production.tables.Product.PRODUCT)
			.where(org.jooq.examples.sqlserver.adventureworks.production.tables.Product.PRODUCT.PRODUCTID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.PRODUCTASSEMBLYID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.ComponentID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	public void setComponentid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.COMPONENTID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.ComponentID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	public java.lang.Integer getComponentid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.COMPONENTID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.ComponentID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.production.tables.records.ProductRecord fetchProductByComponentid() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.production.tables.Product.PRODUCT)
			.where(org.jooq.examples.sqlserver.adventureworks.production.tables.Product.PRODUCT.PRODUCTID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.COMPONENTID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setStartdate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.STARTDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getStartdate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.STARTDATE);
	}

	/**
	 * An uncommented item
	 */
	public void setEnddate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.ENDDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getEnddate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.ENDDATE);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.UnitMeasureCode]
	 * REFERENCES UnitMeasure [Production.UnitMeasure.UnitMeasureCode]
	 * </pre></code>
	 */
	public void setUnitmeasurecode(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.UNITMEASURECODE, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.UnitMeasureCode]
	 * REFERENCES UnitMeasure [Production.UnitMeasure.UnitMeasureCode]
	 * </pre></code>
	 */
	public java.lang.String getUnitmeasurecode() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.UNITMEASURECODE);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Production.BillOfMaterials.UnitMeasureCode]
	 * REFERENCES UnitMeasure [Production.UnitMeasure.UnitMeasureCode]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.production.tables.records.UnitmeasureRecord fetchUnitmeasure() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.production.tables.Unitmeasure.UNITMEASURE)
			.where(org.jooq.examples.sqlserver.adventureworks.production.tables.Unitmeasure.UNITMEASURE.UNITMEASURECODE.equal(getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.UNITMEASURECODE)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setBomlevel(java.lang.Short value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.BOMLEVEL, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Short getBomlevel() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.BOMLEVEL);
	}

	/**
	 * An uncommented item
	 */
	public void setPerassemblyqty(java.math.BigDecimal value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.PERASSEMBLYQTY, value);
	}

	/**
	 * An uncommented item
	 */
	public java.math.BigDecimal getPerassemblyqty() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.PERASSEMBLYQTY);
	}

	/**
	 * An uncommented item
	 */
	public void setModifieddate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.MODIFIEDDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getModifieddate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS.MODIFIEDDATE);
	}

	/**
	 * Create a detached BillofmaterialsRecord
	 */
	public BillofmaterialsRecord() {
		super(org.jooq.examples.sqlserver.adventureworks.production.tables.Billofmaterials.BILLOFMATERIALS);
	}
}
