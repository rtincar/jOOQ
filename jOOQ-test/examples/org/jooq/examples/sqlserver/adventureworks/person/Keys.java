/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.person;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the Person schema
 */
@SuppressWarnings({"unchecked"})
public class Keys extends org.jooq.impl.AbstractKeys {

	// IDENTITY definitions
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddressRecord, java.lang.Integer> IDENTITY_ADDRESS = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS, org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS.ADDRESSID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddresstypeRecord, java.lang.Integer> IDENTITY_ADDRESSTYPE = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE, org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE.ADDRESSTYPEID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContactRecord, java.lang.Integer> IDENTITY_CONTACT = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT, org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT.CONTACTID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContacttypeRecord, java.lang.Integer> IDENTITY_CONTACTTYPE = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE, org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE.CONTACTTYPEID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord, java.lang.Integer> IDENTITY_STATEPROVINCE = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE.STATEPROVINCEID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.VadditionalcontactinfoRecord, java.lang.Integer> IDENTITY_VADDITIONALCONTACTINFO = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Vadditionalcontactinfo.VADDITIONALCONTACTINFO, org.jooq.examples.sqlserver.adventureworks.person.tables.Vadditionalcontactinfo.VADDITIONALCONTACTINFO.CONTACTID);

	// UNIQUE and PRIMARY KEY definitions
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddressRecord> PK_ADDRESS_ADDRESSID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS, org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS.ADDRESSID);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddresstypeRecord> PK_ADDRESSTYPE_ADDRESSTYPEID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE, org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE.ADDRESSTYPEID);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContactRecord> PK_CONTACT_CONTACTID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT, org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT.CONTACTID);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContacttypeRecord> PK_CONTACTTYPE_CONTACTTYPEID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE, org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE.CONTACTTYPEID);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.CountryregionRecord> PK_COUNTRYREGION_COUNTRYREGIONCODE = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Countryregion.COUNTRYREGION, org.jooq.examples.sqlserver.adventureworks.person.tables.Countryregion.COUNTRYREGION.COUNTRYREGIONCODE);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord> PK_STATEPROVINCE_STATEPROVINCEID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE.STATEPROVINCEID);

	// FOREIGN KEY definitions
	public static final org.jooq.ForeignKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddressRecord, org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord> FK_ADDRESS_STATEPROVINCE_STATEPROVINCEID = createForeignKey(PK_STATEPROVINCE_STATEPROVINCEID, org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS, org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS.STATEPROVINCEID);
	public static final org.jooq.ForeignKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord, org.jooq.examples.sqlserver.adventureworks.person.tables.records.CountryregionRecord> FK_STATEPROVINCE_COUNTRYREGION_COUNTRYREGIONCODE = createForeignKey(PK_COUNTRYREGION_COUNTRYREGIONCODE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE.COUNTRYREGIONCODE);
	public static final org.jooq.ForeignKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord, org.jooq.examples.sqlserver.adventureworks.sales.tables.records.SalesterritoryRecord> FK_STATEPROVINCE_SALESTERRITORY_TERRITORYID = createForeignKey(org.jooq.examples.sqlserver.adventureworks.sales.Keys.PK_SALESTERRITORY_TERRITORYID, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE.TERRITORYID);

	/**
	 * No instances
	 */
	private Keys() {}
}
