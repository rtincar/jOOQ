/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;

/**
 * This class is generated by jOOQ.
 *
 * Description of SEQUENCEs accessible to the user
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.6"},
                            comments = "This class is generated by jOOQ")
public class AllSequences extends org.jooq.impl.TableImpl<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord> {

	private static final long serialVersionUID = -1640845404;

	/**
	 * The singleton instance of SYS.ALL_SEQUENCES
	 */
	public static final org.jooq.util.oracle.sys.tables.AllSequences ALL_SEQUENCES = new org.jooq.util.oracle.sys.tables.AllSequences();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord> __RECORD_TYPE = org.jooq.util.oracle.sys.tables.records.AllSequencesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * Name of the owner of the sequence
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.lang.String> SEQUENCE_OWNER = createField("SEQUENCE_OWNER", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * SEQUENCE name
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.lang.String> SEQUENCE_NAME = createField("SEQUENCE_NAME", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Minimum value of the sequence
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.math.BigDecimal> MIN_VALUE = createField("MIN_VALUE", org.jooq.impl.SQLDataType.NUMERIC, this);

	/**
	 * Maximum value of the sequence
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.math.BigDecimal> MAX_VALUE = createField("MAX_VALUE", org.jooq.impl.SQLDataType.NUMERIC, this);

	/**
	 * Value by which sequence is incremented
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.math.BigDecimal> INCREMENT_BY = createField("INCREMENT_BY", org.jooq.impl.SQLDataType.NUMERIC, this);

	/**
	 * Does sequence wrap around on reaching limit?
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.lang.String> CYCLE_FLAG = createField("CYCLE_FLAG", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Are sequence numbers generated in order?
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.lang.String> ORDER_FLAG = createField("ORDER_FLAG", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Number of sequence numbers to cache
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.math.BigDecimal> CACHE_SIZE = createField("CACHE_SIZE", org.jooq.impl.SQLDataType.NUMERIC, this);

	/**
	 * Last sequence number written to disk
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllSequencesRecord, java.math.BigDecimal> LAST_NUMBER = createField("LAST_NUMBER", org.jooq.impl.SQLDataType.NUMERIC, this);

	/**
	 * No further instances allowed
	 */
	private AllSequences() {
		super("ALL_SEQUENCES", org.jooq.util.oracle.sys.Sys.SYS);
	}

	/**
	 * No further instances allowed
	 */
	private AllSequences(java.lang.String alias) {
		super(alias, org.jooq.util.oracle.sys.Sys.SYS, org.jooq.util.oracle.sys.tables.AllSequences.ALL_SEQUENCES);
	}

	@Override
	public org.jooq.util.oracle.sys.tables.AllSequences as(java.lang.String alias) {
		return new org.jooq.util.oracle.sys.tables.AllSequences(alias);
	}
}
