
/**
 * This class is generated by minuteproject 4 jOOQ
 */
package org.jooq.mp.hsqldb.test.tables.records;

import org.jooq.impl.UpdatableRecordImpl;

import org.jooq.mp.hsqldb.test.tables.TBookToBookStore;
import org.jooq.mp.hsqldb.test.Test;
import org.jooq.mp.hsqldb.test.Keys;
import java.sql.*;

//MP-MANAGED-ADDED-AREA-BEGINNING @import@
//MP-MANAGED-ADDED-AREA-ENDING @import@

//MP-MANAGED-ADDED-AREA-BEGINNING @class-annotation@
//MP-MANAGED-ADDED-AREA-ENDING @class-annotation@
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.4"},
                            comments = "This class is generated by minuteproject 4 jOOQ")
public class TBookToBookStoreRecord extends UpdatableRecordImpl<org.jooq.mp.hsqldb.test.tables.records.TBookToBookStoreRecord> {

	private static final long serialVersionUID = 123456789;

//many2many

 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.STOCK-test@
	/**
	 * mapping STOCK setter
	 */
	public void setStock(java.lang.Integer value) {
		setValue(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.STOCK, value);
	}
	
	/**
	 * mapping STOCK getter
	 */
	public java.lang.Integer getStock() {
		return getValue(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.STOCK);
	}
	
//MP-MANAGED-UPDATABLE-ENDING

   //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-parent-org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_ID-test@
	/**
     * PRIMARY KEY
	 * setter and mapper in for bookId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBookToBookStore.bookId]
	 * REFERENCES TBook [TBook.id]
	 * </pre></code>
	 */
	public void setBookId(java.lang.Integer value) {
		setValue(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_ID, value);
	}
	

	/**
	 * getter and mapper out for bookId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBookToBookStore.bookId]
	 * REFERENCES TBook [TBook.id]
	 * </pre></code>
	 */
	public java.lang.Integer getBookId() {
		return getValue(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_ID);
	}
	

	/**
	 * fetcher of associated TBook via BookId
	 * <p>
	 * <code><pre>
     * FOREIGN KEY [TBookToBookStore.bookId]
     * REFERENCES TBook [TBook.id]
	 * </pre></code>
	 */
	public org.jooq.mp.hsqldb.test.tables.records.TBookRecord fetchBookId() {
		return create()
			.selectFrom(org.jooq.mp.hsqldb.test.tables.TBook.__T_BOOK)
			.where(org.jooq.mp.hsqldb.test.tables.TBook.__T_BOOK.ID.equal(getValue(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_ID))) //ID
			.fetchOne();
    }
//MP-MANAGED-UPDATABLE-ENDING
   //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-parent-org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_STORE_NAME-test@
	/**
     * PRIMARY KEY
	 * setter and mapper in for bookStoreName
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBookToBookStore.bookStoreName]
	 * REFERENCES TBookStore [TBookStore.name]
	 * </pre></code>
	 */
	public void setBookStoreName(java.lang.String value) {
		setValue(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_STORE_NAME, value);
	}
	

	/**
	 * getter and mapper out for bookStoreName
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBookToBookStore.bookStoreName]
	 * REFERENCES TBookStore [TBookStore.name]
	 * </pre></code>
	 */
	public java.lang.String getBookStoreName() {
		return getValue(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_STORE_NAME);
	}
	

	/**
	 * fetcher of associated TBookStore via BookStoreName
	 * <p>
	 * <code><pre>
     * FOREIGN KEY [TBookToBookStore.bookStoreName]
     * REFERENCES TBookStore [TBookStore.name]
	 * </pre></code>
	 */
	public org.jooq.mp.hsqldb.test.tables.records.TBookStoreRecord fetchBookStoreName() {
		return create()
			.selectFrom(org.jooq.mp.hsqldb.test.tables.TBookStore.__T_BOOK_STORE)
			.where(org.jooq.mp.hsqldb.test.tables.TBookStore.__T_BOOK_STORE.NAME.equal(getValue(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_STORE_NAME))) //NAME
			.fetchOne();
    }
//MP-MANAGED-UPDATABLE-ENDING
	/**
	 * Create a detached TBookToBookStoreRecord
	 */
	public TBookToBookStoreRecord() {
		super(org.jooq.mp.hsqldb.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE);
	}

//MP-MANAGED-ADDED-AREA-BEGINNING @implementation@
//MP-MANAGED-ADDED-AREA-ENDING @implementation@

}
