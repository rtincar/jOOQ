
/**
 * This class is generated by minuteproject 4 jOOQ
 */
package org.jooq.mp.derby.test.tables;

import org.jooq.mp.derby.test.tables.records.VAuthorRecord;
import org.jooq.mp.derby.test.Test;
import org.jooq.mp.derby.test.Keys;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.ForeignKey;
import java.util.List;
import java.util.Arrays;

//MP-MANAGED-ADDED-AREA-BEGINNING @import@
//MP-MANAGED-ADDED-AREA-ENDING @import@

//MP-MANAGED-ADDED-AREA-BEGINNING @class-annotation@
//MP-MANAGED-ADDED-AREA-ENDING @class-annotation@
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.4"},
                            comments = "This class is generated by minuteproject 4 jOOQ")
public class VAuthor extends org.jooq.impl.UpdatableTableImpl <VAuthorRecord> {

	private static final long serialVersionUID = 123456789;

	/**
	 * The singleton instance of VAuthor
	 */
	public static final VAuthor __V_AUTHOR = new VAuthor();

	/**
	 * The class holding records for this type
	 */
	private static final Class<VAuthorRecord> __RECORD_TYPE = VAuthorRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VAuthorRecord> getRecordType() {
		return __RECORD_TYPE;
	}



 	/**
	 * ID mapping for ID
	 */
	public final TableField<VAuthorRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this);
 	/**
	 * FIRST_NAME mapping for FIRST_NAME
	 */
	public final TableField<VAuthorRecord, java.lang.String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR, this);
 	/**
	 * LAST_NAME mapping for LAST_NAME
	 */
	public final TableField<VAuthorRecord, java.lang.String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR, this);
 	/**
	 * DATE_OF_BIRTH mapping for DATE_OF_BIRTH
	 */
	public final TableField<VAuthorRecord, java.sql.Date> DATE_OF_BIRTH = createField("DATE_OF_BIRTH", org.jooq.impl.SQLDataType.DATE, this);
 	/**
	 * YEAR_OF_BIRTH mapping for YEAR_OF_BIRTH
	 */
	public final TableField<VAuthorRecord, java.lang.Integer> YEAR_OF_BIRTH = createField("YEAR_OF_BIRTH", org.jooq.impl.SQLDataType.INTEGER, this);
 	/**
	 * ADDRESS mapping for ADDRESS
	 */
	public final TableField<VAuthorRecord, java.lang.String> ADDRESS = createField("ADDRESS", org.jooq.impl.SQLDataType.VARCHAR, this);


	/**
	 * No further instances allowed
	 */
	private VAuthor() {
		super("V_AUTHOR", Test.TEST);
	}

	/**
	 * No further instances allowed
	 */
	private VAuthor(String alias) {
		super(alias, Test.TEST, VAuthor.__V_AUTHOR);
	}

	@Override
	public VAuthor as(java.lang.String alias) {
		return new VAuthor(alias);
	}
	
//MP-MANAGED-ADDED-AREA-BEGINNING @implementation@
//MP-MANAGED-ADDED-AREA-ENDING @implementation@	

}
