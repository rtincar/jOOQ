/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.mysql.sakila;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the sakila schema
 */
@SuppressWarnings({"unchecked"})
public class Keys extends org.jooq.impl.AbstractKeys {

	// IDENTITY definitions
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.ActorRecord, java.lang.Short> IDENTITY_ACTOR = createIdentity(org.jooq.examples.mysql.sakila.tables.Actor.ACTOR, org.jooq.examples.mysql.sakila.tables.Actor.ACTOR.ACTOR_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.AddressRecord, java.lang.Short> IDENTITY_ADDRESS = createIdentity(org.jooq.examples.mysql.sakila.tables.Address.ADDRESS, org.jooq.examples.mysql.sakila.tables.Address.ADDRESS.ADDRESS_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.CategoryRecord, java.lang.Byte> IDENTITY_CATEGORY = createIdentity(org.jooq.examples.mysql.sakila.tables.Category.CATEGORY, org.jooq.examples.mysql.sakila.tables.Category.CATEGORY.CATEGORY_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.CityRecord, java.lang.Short> IDENTITY_CITY = createIdentity(org.jooq.examples.mysql.sakila.tables.City.CITY, org.jooq.examples.mysql.sakila.tables.City.CITY.CITY_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.CountryRecord, java.lang.Short> IDENTITY_COUNTRY = createIdentity(org.jooq.examples.mysql.sakila.tables.Country.COUNTRY, org.jooq.examples.mysql.sakila.tables.Country.COUNTRY.COUNTRY_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.CustomerRecord, java.lang.Short> IDENTITY_CUSTOMER = createIdentity(org.jooq.examples.mysql.sakila.tables.Customer.CUSTOMER, org.jooq.examples.mysql.sakila.tables.Customer.CUSTOMER.CUSTOMER_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.FilmRecord, java.lang.Short> IDENTITY_FILM = createIdentity(org.jooq.examples.mysql.sakila.tables.Film.FILM, org.jooq.examples.mysql.sakila.tables.Film.FILM.FILM_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.InventoryRecord, java.lang.Integer> IDENTITY_INVENTORY = createIdentity(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY, org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.INVENTORY_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.LanguageRecord, java.lang.Byte> IDENTITY_LANGUAGE = createIdentity(org.jooq.examples.mysql.sakila.tables.Language.LANGUAGE, org.jooq.examples.mysql.sakila.tables.Language.LANGUAGE.LANGUAGE_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.PaymentRecord, java.lang.Short> IDENTITY_PAYMENT = createIdentity(org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT, org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT.PAYMENT_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.RentalRecord, java.lang.Integer> IDENTITY_RENTAL = createIdentity(org.jooq.examples.mysql.sakila.tables.Rental.RENTAL, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.RENTAL_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.StaffRecord, java.lang.Byte> IDENTITY_STAFF = createIdentity(org.jooq.examples.mysql.sakila.tables.Staff.STAFF, org.jooq.examples.mysql.sakila.tables.Staff.STAFF.STAFF_ID);
	public static final org.jooq.Identity<org.jooq.examples.mysql.sakila.tables.records.StoreRecord, java.lang.Byte> IDENTITY_STORE = createIdentity(org.jooq.examples.mysql.sakila.tables.Store.STORE, org.jooq.examples.mysql.sakila.tables.Store.STORE.STORE_ID);

	// UNIQUE and PRIMARY KEY definitions
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.ActorRecord> KEY_ACTOR_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Actor.ACTOR, org.jooq.examples.mysql.sakila.tables.Actor.ACTOR.ACTOR_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.AddressRecord> KEY_ADDRESS_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Address.ADDRESS, org.jooq.examples.mysql.sakila.tables.Address.ADDRESS.ADDRESS_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.CategoryRecord> KEY_CATEGORY_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Category.CATEGORY, org.jooq.examples.mysql.sakila.tables.Category.CATEGORY.CATEGORY_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.CityRecord> KEY_CITY_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.City.CITY, org.jooq.examples.mysql.sakila.tables.City.CITY.CITY_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.CountryRecord> KEY_COUNTRY_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Country.COUNTRY, org.jooq.examples.mysql.sakila.tables.Country.COUNTRY.COUNTRY_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.CustomerRecord> KEY_CUSTOMER_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Customer.CUSTOMER, org.jooq.examples.mysql.sakila.tables.Customer.CUSTOMER.CUSTOMER_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.FilmRecord> KEY_FILM_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Film.FILM, org.jooq.examples.mysql.sakila.tables.Film.FILM.FILM_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.FilmActorRecord> KEY_FILM_ACTOR_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.FilmActor.FILM_ACTOR, org.jooq.examples.mysql.sakila.tables.FilmActor.FILM_ACTOR.ACTOR_ID, org.jooq.examples.mysql.sakila.tables.FilmActor.FILM_ACTOR.FILM_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.FilmCategoryRecord> KEY_FILM_CATEGORY_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.FilmCategory.FILM_CATEGORY, org.jooq.examples.mysql.sakila.tables.FilmCategory.FILM_CATEGORY.FILM_ID, org.jooq.examples.mysql.sakila.tables.FilmCategory.FILM_CATEGORY.CATEGORY_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.FilmTextRecord> KEY_FILM_TEXT_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.FilmText.FILM_TEXT, org.jooq.examples.mysql.sakila.tables.FilmText.FILM_TEXT.FILM_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.InventoryRecord> KEY_INVENTORY_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY, org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.INVENTORY_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.LanguageRecord> KEY_LANGUAGE_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Language.LANGUAGE, org.jooq.examples.mysql.sakila.tables.Language.LANGUAGE.LANGUAGE_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.PaymentRecord> KEY_PAYMENT_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT, org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT.PAYMENT_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.RentalRecord> KEY_RENTAL_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Rental.RENTAL, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.RENTAL_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.RentalRecord> KEY_RENTAL_RENTAL_DATE = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Rental.RENTAL, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.RENTAL_DATE, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.INVENTORY_ID, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.CUSTOMER_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.StaffRecord> KEY_STAFF_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Staff.STAFF, org.jooq.examples.mysql.sakila.tables.Staff.STAFF.STAFF_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.StoreRecord> KEY_STORE_PRIMARY = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Store.STORE, org.jooq.examples.mysql.sakila.tables.Store.STORE.STORE_ID);
	public static final org.jooq.UniqueKey<org.jooq.examples.mysql.sakila.tables.records.StoreRecord> KEY_STORE_IDX_UNIQUE_MANAGER = createUniqueKey(org.jooq.examples.mysql.sakila.tables.Store.STORE, org.jooq.examples.mysql.sakila.tables.Store.STORE.MANAGER_STAFF_ID);

	// FOREIGN KEY definitions
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.AddressRecord, org.jooq.examples.mysql.sakila.tables.records.CityRecord> FK_ADDRESS_CITY = createForeignKey(KEY_CITY_PRIMARY, org.jooq.examples.mysql.sakila.tables.Address.ADDRESS, org.jooq.examples.mysql.sakila.tables.Address.ADDRESS.CITY_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.CityRecord, org.jooq.examples.mysql.sakila.tables.records.CountryRecord> FK_CITY_COUNTRY = createForeignKey(KEY_COUNTRY_PRIMARY, org.jooq.examples.mysql.sakila.tables.City.CITY, org.jooq.examples.mysql.sakila.tables.City.CITY.COUNTRY_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.CustomerRecord, org.jooq.examples.mysql.sakila.tables.records.StoreRecord> FK_CUSTOMER_STORE = createForeignKey(KEY_STORE_PRIMARY, org.jooq.examples.mysql.sakila.tables.Customer.CUSTOMER, org.jooq.examples.mysql.sakila.tables.Customer.CUSTOMER.STORE_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.CustomerRecord, org.jooq.examples.mysql.sakila.tables.records.AddressRecord> FK_CUSTOMER_ADDRESS = createForeignKey(KEY_ADDRESS_PRIMARY, org.jooq.examples.mysql.sakila.tables.Customer.CUSTOMER, org.jooq.examples.mysql.sakila.tables.Customer.CUSTOMER.ADDRESS_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.FilmRecord, org.jooq.examples.mysql.sakila.tables.records.LanguageRecord> FK_FILM_LANGUAGE = createForeignKey(KEY_LANGUAGE_PRIMARY, org.jooq.examples.mysql.sakila.tables.Film.FILM, org.jooq.examples.mysql.sakila.tables.Film.FILM.LANGUAGE_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.FilmRecord, org.jooq.examples.mysql.sakila.tables.records.LanguageRecord> FK_FILM_LANGUAGE_ORIGINAL = createForeignKey(KEY_LANGUAGE_PRIMARY, org.jooq.examples.mysql.sakila.tables.Film.FILM, org.jooq.examples.mysql.sakila.tables.Film.FILM.ORIGINAL_LANGUAGE_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.FilmActorRecord, org.jooq.examples.mysql.sakila.tables.records.ActorRecord> FK_FILM_ACTOR_ACTOR = createForeignKey(KEY_ACTOR_PRIMARY, org.jooq.examples.mysql.sakila.tables.FilmActor.FILM_ACTOR, org.jooq.examples.mysql.sakila.tables.FilmActor.FILM_ACTOR.ACTOR_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.FilmActorRecord, org.jooq.examples.mysql.sakila.tables.records.FilmRecord> FK_FILM_ACTOR_FILM = createForeignKey(KEY_FILM_PRIMARY, org.jooq.examples.mysql.sakila.tables.FilmActor.FILM_ACTOR, org.jooq.examples.mysql.sakila.tables.FilmActor.FILM_ACTOR.FILM_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.FilmCategoryRecord, org.jooq.examples.mysql.sakila.tables.records.FilmRecord> FK_FILM_CATEGORY_FILM = createForeignKey(KEY_FILM_PRIMARY, org.jooq.examples.mysql.sakila.tables.FilmCategory.FILM_CATEGORY, org.jooq.examples.mysql.sakila.tables.FilmCategory.FILM_CATEGORY.FILM_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.FilmCategoryRecord, org.jooq.examples.mysql.sakila.tables.records.CategoryRecord> FK_FILM_CATEGORY_CATEGORY = createForeignKey(KEY_CATEGORY_PRIMARY, org.jooq.examples.mysql.sakila.tables.FilmCategory.FILM_CATEGORY, org.jooq.examples.mysql.sakila.tables.FilmCategory.FILM_CATEGORY.CATEGORY_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.InventoryRecord, org.jooq.examples.mysql.sakila.tables.records.FilmRecord> FK_INVENTORY_FILM = createForeignKey(KEY_FILM_PRIMARY, org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY, org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.FILM_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.InventoryRecord, org.jooq.examples.mysql.sakila.tables.records.StoreRecord> FK_INVENTORY_STORE = createForeignKey(KEY_STORE_PRIMARY, org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY, org.jooq.examples.mysql.sakila.tables.Inventory.INVENTORY.STORE_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.PaymentRecord, org.jooq.examples.mysql.sakila.tables.records.CustomerRecord> FK_PAYMENT_CUSTOMER = createForeignKey(KEY_CUSTOMER_PRIMARY, org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT, org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT.CUSTOMER_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.PaymentRecord, org.jooq.examples.mysql.sakila.tables.records.StaffRecord> FK_PAYMENT_STAFF = createForeignKey(KEY_STAFF_PRIMARY, org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT, org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT.STAFF_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.PaymentRecord, org.jooq.examples.mysql.sakila.tables.records.RentalRecord> FK_PAYMENT_RENTAL = createForeignKey(KEY_RENTAL_PRIMARY, org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT, org.jooq.examples.mysql.sakila.tables.Payment.PAYMENT.RENTAL_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.RentalRecord, org.jooq.examples.mysql.sakila.tables.records.InventoryRecord> FK_RENTAL_INVENTORY = createForeignKey(KEY_INVENTORY_PRIMARY, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.INVENTORY_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.RentalRecord, org.jooq.examples.mysql.sakila.tables.records.CustomerRecord> FK_RENTAL_CUSTOMER = createForeignKey(KEY_CUSTOMER_PRIMARY, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.CUSTOMER_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.RentalRecord, org.jooq.examples.mysql.sakila.tables.records.StaffRecord> FK_RENTAL_STAFF = createForeignKey(KEY_STAFF_PRIMARY, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL, org.jooq.examples.mysql.sakila.tables.Rental.RENTAL.STAFF_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.StaffRecord, org.jooq.examples.mysql.sakila.tables.records.AddressRecord> FK_STAFF_ADDRESS = createForeignKey(KEY_ADDRESS_PRIMARY, org.jooq.examples.mysql.sakila.tables.Staff.STAFF, org.jooq.examples.mysql.sakila.tables.Staff.STAFF.ADDRESS_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.StaffRecord, org.jooq.examples.mysql.sakila.tables.records.StoreRecord> FK_STAFF_STORE = createForeignKey(KEY_STORE_PRIMARY, org.jooq.examples.mysql.sakila.tables.Staff.STAFF, org.jooq.examples.mysql.sakila.tables.Staff.STAFF.STORE_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.StoreRecord, org.jooq.examples.mysql.sakila.tables.records.StaffRecord> FK_STORE_STAFF = createForeignKey(KEY_STAFF_PRIMARY, org.jooq.examples.mysql.sakila.tables.Store.STORE, org.jooq.examples.mysql.sakila.tables.Store.STORE.MANAGER_STAFF_ID);
	public static final org.jooq.ForeignKey<org.jooq.examples.mysql.sakila.tables.records.StoreRecord, org.jooq.examples.mysql.sakila.tables.records.AddressRecord> FK_STORE_ADDRESS = createForeignKey(KEY_ADDRESS_PRIMARY, org.jooq.examples.mysql.sakila.tables.Store.STORE, org.jooq.examples.mysql.sakila.tables.Store.STORE.ADDRESS_ID);

	/**
	 * No instances
	 */
	private Keys() {}
}
