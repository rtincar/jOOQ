/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.sales.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "CurrencyRate", schema = "Sales")
public class CurrencyrateRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.sales.tables.records.CurrencyrateRecord> {

	private static final long serialVersionUID = 1826864506;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setCurrencyrateid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.CURRENCYRATEID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "CurrencyRateID", unique = true)
	public java.lang.Integer getCurrencyrateid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.CURRENCYRATEID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.sqlserver.adventureworks.sales.tables.records.SalesorderheaderRecord> fetchSalesorderheaderList() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.sales.tables.Salesorderheader.SALESORDERHEADER)
			.where(org.jooq.examples.sqlserver.adventureworks.sales.tables.Salesorderheader.SALESORDERHEADER.CURRENCYRATEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.CURRENCYRATEID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 */
	public void setCurrencyratedate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.CURRENCYRATEDATE, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "CurrencyRateDate")
	public java.sql.Timestamp getCurrencyratedate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.CURRENCYRATEDATE);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CurrencyRate.FromCurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	public void setFromcurrencycode(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.FROMCURRENCYCODE, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CurrencyRate.FromCurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	@javax.persistence.Column(name = "FromCurrencyCode")
	public java.lang.String getFromcurrencycode() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.FROMCURRENCYCODE);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CurrencyRate.FromCurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.sales.tables.records.CurrencyRecord fetchCurrencyByFromcurrencycode() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currency.CURRENCY)
			.where(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currency.CURRENCY.CURRENCYCODE.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.FROMCURRENCYCODE)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CurrencyRate.ToCurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	public void setTocurrencycode(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.TOCURRENCYCODE, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CurrencyRate.ToCurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	@javax.persistence.Column(name = "ToCurrencyCode")
	public java.lang.String getTocurrencycode() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.TOCURRENCYCODE);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CurrencyRate.ToCurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.sales.tables.records.CurrencyRecord fetchCurrencyByTocurrencycode() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currency.CURRENCY)
			.where(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currency.CURRENCY.CURRENCYCODE.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.TOCURRENCYCODE)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setAveragerate(java.math.BigDecimal value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.AVERAGERATE, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "AverageRate")
	public java.math.BigDecimal getAveragerate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.AVERAGERATE);
	}

	/**
	 * An uncommented item
	 */
	public void setEndofdayrate(java.math.BigDecimal value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.ENDOFDAYRATE, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "EndOfDayRate")
	public java.math.BigDecimal getEndofdayrate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.ENDOFDAYRATE);
	}

	/**
	 * An uncommented item
	 */
	public void setModifieddate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.MODIFIEDDATE, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "ModifiedDate")
	public java.sql.Timestamp getModifieddate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE.MODIFIEDDATE);
	}

	/**
	 * Create a detached CurrencyrateRecord
	 */
	public CurrencyrateRecord() {
		super(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currencyrate.CURRENCYRATE);
	}
}
