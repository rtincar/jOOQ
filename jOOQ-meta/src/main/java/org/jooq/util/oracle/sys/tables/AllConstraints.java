/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;

/**
 * This class is generated by jOOQ.
 *
 * Constraint definitions on accessible tables
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.3"},
                            comments = "This class is generated by jOOQ")
public class AllConstraints extends org.jooq.impl.TableImpl<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord> {

	private static final long serialVersionUID = -921224945;

	/**
	 * The singleton instance of ALL_CONSTRAINTS
	 */
	public static final org.jooq.util.oracle.sys.tables.AllConstraints ALL_CONSTRAINTS = new org.jooq.util.oracle.sys.tables.AllConstraints();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord> __RECORD_TYPE = org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * Owner of the table
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Name associated with constraint definition
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> CONSTRAINT_NAME = createField("CONSTRAINT_NAME", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Type of constraint definition
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> CONSTRAINT_TYPE = createField("CONSTRAINT_TYPE", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Name associated with table with constraint definition
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> TABLE_NAME = createField("TABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Text of search condition for table check
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> SEARCH_CONDITION = createField("SEARCH_CONDITION", org.jooq.impl.SQLDataType.CLOB, this);

	/**
	 * Owner of table used in referential constraint
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> R_OWNER = createField("R_OWNER", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Name of unique constraint definition for referenced table
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> R_CONSTRAINT_NAME = createField("R_CONSTRAINT_NAME", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The delete rule for a referential constraint
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> DELETE_RULE = createField("DELETE_RULE", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Enforcement status of constraint - ENABLED or DISABLED
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Is the constraint deferrable - DEFERRABLE or NOT DEFERRABLE
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> DEFERRABLE = createField("DEFERRABLE", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Is the constraint deferred by default -  DEFERRED or IMMEDIATE
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> DEFERRED = createField("DEFERRED", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Was this constraint system validated? -  VALIDATED or NOT VALIDATED
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> VALIDATED = createField("VALIDATED", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Was the constraint name system generated? -  GENERATED NAME or USER NAME
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> GENERATED = createField("GENERATED", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * Creating this constraint should give ORA-02436.  Rewrite it before 2000 AD.
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> BAD = createField("BAD", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * If set, this flag will be used in optimizer
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> RELY = createField("RELY", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The date when this column was last enabled or disabled
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.sql.Date> LAST_CHANGE = createField("LAST_CHANGE", org.jooq.impl.SQLDataType.DATE, this);

	/**
	 * The owner of the index used by this constraint
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> INDEX_OWNER = createField("INDEX_OWNER", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The index used by this constraint
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> INDEX_NAME = createField("INDEX_NAME", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> INVALID = createField("INVALID", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<org.jooq.util.oracle.sys.tables.records.AllConstraintsRecord, java.lang.String> VIEW_RELATED = createField("VIEW_RELATED", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * No further instances allowed
	 */
	private AllConstraints() {
		super("ALL_CONSTRAINTS", org.jooq.util.oracle.sys.Sys.SYS);
	}

	/**
	 * No further instances allowed
	 */
	private AllConstraints(java.lang.String alias) {
		super(alias, org.jooq.util.oracle.sys.Sys.SYS, org.jooq.util.oracle.sys.tables.AllConstraints.ALL_CONSTRAINTS);
	}

	@Override
	public org.jooq.util.oracle.sys.tables.AllConstraints as(java.lang.String alias) {
		return new org.jooq.util.oracle.sys.tables.AllConstraints(alias);
	}
}
