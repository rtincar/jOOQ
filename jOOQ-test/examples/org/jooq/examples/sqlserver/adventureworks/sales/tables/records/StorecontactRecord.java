/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.sales.tables.records;

/**
 * This class is generated by jOOQ.
 */
public class StorecontactRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.sales.tables.records.StorecontactRecord> {

	private static final long serialVersionUID = 503022472;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.CustomerID]
	 * REFERENCES Store [Sales.Store.CustomerID]
	 * </pre></code>
	 */
	public void setCustomerid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CUSTOMERID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.CustomerID]
	 * REFERENCES Store [Sales.Store.CustomerID]
	 * </pre></code>
	 */
	public java.lang.Integer getCustomerid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CUSTOMERID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.CustomerID]
	 * REFERENCES Store [Sales.Store.CustomerID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.sales.tables.records.StoreRecord fetchStore() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.sales.tables.Store.STORE)
			.where(org.jooq.examples.sqlserver.adventureworks.sales.tables.Store.STORE.CUSTOMERID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CUSTOMERID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.ContactID]
	 * REFERENCES Contact [Person.Contact.ContactID]
	 * </pre></code>
	 */
	public void setContactid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CONTACTID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.ContactID]
	 * REFERENCES Contact [Person.Contact.ContactID]
	 * </pre></code>
	 */
	public java.lang.Integer getContactid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CONTACTID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.ContactID]
	 * REFERENCES Contact [Person.Contact.ContactID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContactRecord fetchContact() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT)
			.where(org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT.CONTACTID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CONTACTID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.ContactTypeID]
	 * REFERENCES ContactType [Person.ContactType.ContactTypeID]
	 * </pre></code>
	 */
	public void setContacttypeid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CONTACTTYPEID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.ContactTypeID]
	 * REFERENCES ContactType [Person.ContactType.ContactTypeID]
	 * </pre></code>
	 */
	public java.lang.Integer getContacttypeid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CONTACTTYPEID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.StoreContact.ContactTypeID]
	 * REFERENCES ContactType [Person.ContactType.ContactTypeID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContacttypeRecord fetchContacttype() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE)
			.where(org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE.CONTACTTYPEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.CONTACTTYPEID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setRowguid(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.ROWGUID, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getRowguid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.ROWGUID);
	}

	/**
	 * An uncommented item
	 */
	public void setModifieddate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.MODIFIEDDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getModifieddate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT.MODIFIEDDATE);
	}

	/**
	 * Create a detached StorecontactRecord
	 */
	public StorecontactRecord() {
		super(org.jooq.examples.sqlserver.adventureworks.sales.tables.Storecontact.STORECONTACT);
	}
}
