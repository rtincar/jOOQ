/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.sales.tables.records;

/**
 * This class is generated by jOOQ.
 */
public class CountryregioncurrencyRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.sales.tables.records.CountryregioncurrencyRecord> {

	private static final long serialVersionUID = 156418598;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CountryRegionCurrency.CountryRegionCode]
	 * REFERENCES CountryRegion [Person.CountryRegion.CountryRegionCode]
	 * </pre></code>
	 */
	public void setCountryregioncode(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY.COUNTRYREGIONCODE, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CountryRegionCurrency.CountryRegionCode]
	 * REFERENCES CountryRegion [Person.CountryRegion.CountryRegionCode]
	 * </pre></code>
	 */
	public java.lang.String getCountryregioncode() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY.COUNTRYREGIONCODE);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CountryRegionCurrency.CountryRegionCode]
	 * REFERENCES CountryRegion [Person.CountryRegion.CountryRegionCode]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.person.tables.records.CountryregionRecord fetchCountryregion() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.person.tables.Countryregion.COUNTRYREGION)
			.where(org.jooq.examples.sqlserver.adventureworks.person.tables.Countryregion.COUNTRYREGION.COUNTRYREGIONCODE.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY.COUNTRYREGIONCODE)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CountryRegionCurrency.CurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	public void setCurrencycode(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY.CURRENCYCODE, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CountryRegionCurrency.CurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	public java.lang.String getCurrencycode() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY.CURRENCYCODE);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CountryRegionCurrency.CurrencyCode]
	 * REFERENCES Currency [Sales.Currency.CurrencyCode]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.sales.tables.records.CurrencyRecord fetchCurrency() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currency.CURRENCY)
			.where(org.jooq.examples.sqlserver.adventureworks.sales.tables.Currency.CURRENCY.CURRENCYCODE.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY.CURRENCYCODE)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setModifieddate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY.MODIFIEDDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getModifieddate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY.MODIFIEDDATE);
	}

	/**
	 * Create a detached CountryregioncurrencyRecord
	 */
	public CountryregioncurrencyRecord() {
		super(org.jooq.examples.sqlserver.adventureworks.sales.tables.Countryregioncurrency.COUNTRYREGIONCURRENCY);
	}
}
