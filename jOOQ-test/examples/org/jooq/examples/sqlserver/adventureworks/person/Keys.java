/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.person;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the Person schema
 */
@SuppressWarnings({"unchecked"})
public class Keys extends org.jooq.impl.AbstractKeys {

	// IDENTITY definitions
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddressRecord, java.lang.Integer> IDENTITY_Address = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS, org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS.ADDRESSID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddresstypeRecord, java.lang.Integer> IDENTITY_AddressType = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE, org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE.ADDRESSTYPEID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContactRecord, java.lang.Integer> IDENTITY_Contact = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT, org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT.CONTACTID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContacttypeRecord, java.lang.Integer> IDENTITY_ContactType = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE, org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE.CONTACTTYPEID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord, java.lang.Integer> IDENTITY_StateProvince = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE.STATEPROVINCEID);
	public static final org.jooq.Identity<org.jooq.examples.sqlserver.adventureworks.person.tables.records.VadditionalcontactinfoRecord, java.lang.Integer> IDENTITY_vAdditionalContactInfo = createIdentity(org.jooq.examples.sqlserver.adventureworks.person.tables.Vadditionalcontactinfo.VADDITIONALCONTACTINFO, org.jooq.examples.sqlserver.adventureworks.person.tables.Vadditionalcontactinfo.VADDITIONALCONTACTINFO.CONTACTID);

	// UNIQUE and PRIMARY KEY definitions
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddressRecord> PK_Address_AddressID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS, org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS.ADDRESSID);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddresstypeRecord> PK_AddressType_AddressTypeID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE, org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE.ADDRESSTYPEID);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContactRecord> PK_Contact_ContactID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT, org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT.CONTACTID);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContacttypeRecord> PK_ContactType_ContactTypeID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE, org.jooq.examples.sqlserver.adventureworks.person.tables.Contacttype.CONTACTTYPE.CONTACTTYPEID);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.CountryregionRecord> PK_CountryRegion_CountryRegionCode = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Countryregion.COUNTRYREGION, org.jooq.examples.sqlserver.adventureworks.person.tables.Countryregion.COUNTRYREGION.COUNTRYREGIONCODE);
	public static final org.jooq.UniqueKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord> PK_StateProvince_StateProvinceID = createUniqueKey(org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE.STATEPROVINCEID);

	// FOREIGN KEY definitions
	public static final org.jooq.ForeignKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddressRecord, org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord> FK_Address_StateProvince_StateProvinceID = createForeignKey(PK_StateProvince_StateProvinceID, org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS, org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS.STATEPROVINCEID);
	public static final org.jooq.ForeignKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord, org.jooq.examples.sqlserver.adventureworks.person.tables.records.CountryregionRecord> FK_StateProvince_CountryRegion_CountryRegionCode = createForeignKey(PK_CountryRegion_CountryRegionCode, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE.COUNTRYREGIONCODE);
	public static final org.jooq.ForeignKey<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateprovinceRecord, org.jooq.examples.sqlserver.adventureworks.sales.tables.records.SalesterritoryRecord> FK_StateProvince_SalesTerritory_TerritoryID = createForeignKey(org.jooq.examples.sqlserver.adventureworks.sales.Keys.PK_SalesTerritory_TerritoryID, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE, org.jooq.examples.sqlserver.adventureworks.person.tables.Stateprovince.STATEPROVINCE.TERRITORYID);

	/**
	 * No instances
	 */
	private Keys() {}
}
