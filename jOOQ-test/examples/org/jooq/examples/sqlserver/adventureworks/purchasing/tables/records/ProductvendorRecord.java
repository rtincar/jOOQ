/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.purchasing.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "ProductVendor", schema = "Purchasing", uniqueConstraints = {
	@javax.persistence.UniqueConstraint(columnNames = {"ProductID", "VendorID"})
})
public class ProductvendorRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.purchasing.tables.records.ProductvendorRecord> {

	private static final long serialVersionUID = 1302734644;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.ProductID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	public void setProductid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.PRODUCTID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.ProductID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	@javax.persistence.Column(name = "ProductID")
	public java.lang.Integer getProductid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.PRODUCTID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.ProductID]
	 * REFERENCES Product [Production.Product.ProductID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.production.tables.records.ProductRecord fetchProduct() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.production.tables.Product.PRODUCT)
			.where(org.jooq.examples.sqlserver.adventureworks.production.tables.Product.PRODUCT.PRODUCTID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.PRODUCTID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.VendorID]
	 * REFERENCES Vendor [Purchasing.Vendor.VendorID]
	 * </pre></code>
	 */
	public void setVendorid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.VENDORID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.VendorID]
	 * REFERENCES Vendor [Purchasing.Vendor.VendorID]
	 * </pre></code>
	 */
	@javax.persistence.Column(name = "VendorID")
	public java.lang.Integer getVendorid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.VENDORID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.VendorID]
	 * REFERENCES Vendor [Purchasing.Vendor.VendorID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.purchasing.tables.records.VendorRecord fetchVendor() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Vendor.VENDOR)
			.where(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Vendor.VENDOR.VENDORID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.VENDORID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setAverageleadtime(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.AVERAGELEADTIME, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "AverageLeadTime")
	public java.lang.Integer getAverageleadtime() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.AVERAGELEADTIME);
	}

	/**
	 * An uncommented item
	 */
	public void setStandardprice(java.math.BigDecimal value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.STANDARDPRICE, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "StandardPrice")
	public java.math.BigDecimal getStandardprice() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.STANDARDPRICE);
	}

	/**
	 * An uncommented item
	 */
	public void setLastreceiptcost(java.math.BigDecimal value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.LASTRECEIPTCOST, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "LastReceiptCost")
	public java.math.BigDecimal getLastreceiptcost() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.LASTRECEIPTCOST);
	}

	/**
	 * An uncommented item
	 */
	public void setLastreceiptdate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.LASTRECEIPTDATE, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "LastReceiptDate")
	public java.sql.Timestamp getLastreceiptdate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.LASTRECEIPTDATE);
	}

	/**
	 * An uncommented item
	 */
	public void setMinorderqty(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.MINORDERQTY, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "MinOrderQty")
	public java.lang.Integer getMinorderqty() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.MINORDERQTY);
	}

	/**
	 * An uncommented item
	 */
	public void setMaxorderqty(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.MAXORDERQTY, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "MaxOrderQty")
	public java.lang.Integer getMaxorderqty() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.MAXORDERQTY);
	}

	/**
	 * An uncommented item
	 */
	public void setOnorderqty(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.ONORDERQTY, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "OnOrderQty")
	public java.lang.Integer getOnorderqty() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.ONORDERQTY);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.UnitMeasureCode]
	 * REFERENCES UnitMeasure [Production.UnitMeasure.UnitMeasureCode]
	 * </pre></code>
	 */
	public void setUnitmeasurecode(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.UNITMEASURECODE, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.UnitMeasureCode]
	 * REFERENCES UnitMeasure [Production.UnitMeasure.UnitMeasureCode]
	 * </pre></code>
	 */
	@javax.persistence.Column(name = "UnitMeasureCode")
	public java.lang.String getUnitmeasurecode() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.UNITMEASURECODE);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Purchasing.ProductVendor.UnitMeasureCode]
	 * REFERENCES UnitMeasure [Production.UnitMeasure.UnitMeasureCode]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.production.tables.records.UnitmeasureRecord fetchUnitmeasure() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.production.tables.Unitmeasure.UNITMEASURE)
			.where(org.jooq.examples.sqlserver.adventureworks.production.tables.Unitmeasure.UNITMEASURE.UNITMEASURECODE.equal(getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.UNITMEASURECODE)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setModifieddate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.MODIFIEDDATE, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "ModifiedDate")
	public java.sql.Timestamp getModifieddate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR.MODIFIEDDATE);
	}

	/**
	 * Create a detached ProductvendorRecord
	 */
	public ProductvendorRecord() {
		super(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Productvendor.PRODUCTVENDOR);
	}
}
