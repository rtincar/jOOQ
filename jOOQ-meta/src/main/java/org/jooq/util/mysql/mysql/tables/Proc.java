/**
 * This class is generated by jOOQ
 */
package org.jooq.util.mysql.mysql.tables;

/**
 * This class is generated by jOOQ.
 *
 * Stored Procedures
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.5"},
                            comments = "This class is generated by jOOQ")
public class Proc extends org.jooq.impl.TableImpl<org.jooq.util.mysql.mysql.tables.records.ProcRecord> {

	private static final long serialVersionUID = -1270070784;

	/**
	 * The singleton instance of proc
	 */
	public static final org.jooq.util.mysql.mysql.tables.Proc PROC = new org.jooq.util.mysql.mysql.tables.Proc();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<org.jooq.util.mysql.mysql.tables.records.ProcRecord> __RECORD_TYPE = org.jooq.util.mysql.mysql.tables.records.ProcRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.util.mysql.mysql.tables.records.ProcRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> DB = createField("db", org.jooq.impl.SQLDataType.CHAR, PROC);

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.CHAR, PROC);

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, org.jooq.util.mysql.mysql.enums.ProcType> TYPE = createField("type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.jooq.util.mysql.mysql.enums.ProcType.class), PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> SPECIFIC_NAME = createField("specific_name", org.jooq.impl.SQLDataType.CHAR, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, org.jooq.util.mysql.mysql.enums.ProcLanguage> LANGUAGE = createField("language", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.jooq.util.mysql.mysql.enums.ProcLanguage.class), PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, org.jooq.util.mysql.mysql.enums.ProcSqlDataAccess> SQL_DATA_ACCESS = createField("sql_data_access", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.jooq.util.mysql.mysql.enums.ProcSqlDataAccess.class), PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, org.jooq.util.mysql.mysql.enums.ProcIsDeterministic> IS_DETERMINISTIC = createField("is_deterministic", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.jooq.util.mysql.mysql.enums.ProcIsDeterministic.class), PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, org.jooq.util.mysql.mysql.enums.ProcSecurityType> SECURITY_TYPE = createField("security_type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.jooq.util.mysql.mysql.enums.ProcSecurityType.class), PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, byte[]> PARAM_LIST = createField("param_list", org.jooq.impl.SQLDataType.BLOB, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, byte[]> RETURNS = createField("returns", org.jooq.impl.SQLDataType.BLOB, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, byte[]> BODY = createField("body", org.jooq.impl.SQLDataType.BLOB, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> DEFINER = createField("definer", org.jooq.impl.SQLDataType.CHAR, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.sql.Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> SQL_MODE = createField("sql_mode", org.jooq.impl.SQLDataType.VARCHAR, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> CHARACTER_SET_CLIENT = createField("character_set_client", org.jooq.impl.SQLDataType.CHAR, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> COLLATION_CONNECTION = createField("collation_connection", org.jooq.impl.SQLDataType.CHAR, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, java.lang.String> DB_COLLATION = createField("db_collation", org.jooq.impl.SQLDataType.CHAR, PROC);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.jooq.util.mysql.mysql.tables.records.ProcRecord, byte[]> BODY_UTF8 = createField("body_utf8", org.jooq.impl.SQLDataType.BLOB, PROC);

	/**
	 * No further instances allowed
	 */
	private Proc() {
		super("proc", org.jooq.util.mysql.mysql.Mysql.MYSQL);
	}
}
