
/**
 * This class is generated by minuteproject 4 jOOQ
 */
package org.jooq.mp.derby.test.tables.records;

import org.jooq.impl.UpdatableRecordImpl;

import org.jooq.mp.derby.test.tables.TBook;
import org.jooq.mp.derby.test.Test;
import org.jooq.mp.derby.test.Keys;
import java.sql.*;

//MP-MANAGED-ADDED-AREA-BEGINNING @import@
//MP-MANAGED-ADDED-AREA-ENDING @import@

//MP-MANAGED-ADDED-AREA-BEGINNING @class-annotation@
//MP-MANAGED-ADDED-AREA-ENDING @class-annotation@
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.4"},
                            comments = "This class is generated by minuteproject 4 jOOQ")
public class TBookRecord extends UpdatableRecordImpl<org.jooq.mp.derby.test.tables.records.TBookRecord> {

	private static final long serialVersionUID = 123456789;

 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-pk-test@
	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
    public void setId(java.lang.Integer value) {
        setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.ID, value);
    }
	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
    public java.lang.Integer getId() {
        return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.ID);
    }
//MP-MANAGED-UPDATABLE-ENDING
  //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-child-TBookToBookStores-test@
	/**
	 * An uncommented item
	 * 
	 */
	public java.util.List<org.jooq.mp.derby.test.tables.records.TBookToBookStoreRecord> fetchTBookToBookStoresList() {
		return create()
			.selectFrom(org.jooq.mp.derby.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE)
			.where(org.jooq.mp.derby.test.tables.TBookToBookStore.__T_BOOK_TO_BOOK_STORE.BOOK_ID.equal(getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.ID))) 
			.fetch();
	}
	
//MP-MANAGED-UPDATABLE-ENDING
//many2many

 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TBook.__T_BOOK.TITLE-test@
	/**
	 * mapping TITLE setter
	 */
	public void setTitle(java.lang.String value) {
		setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.TITLE, value);
	}
	
	/**
	 * mapping TITLE getter
	 */
	public java.lang.String getTitle() {
		return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.TITLE);
	}
	
//MP-MANAGED-UPDATABLE-ENDING
 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TBook.__T_BOOK.PUBLISHED_IN-test@
	/**
	 * mapping PUBLISHED_IN setter
	 */
	public void setPublishedIn(java.lang.Integer value) {
		setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.PUBLISHED_IN, value);
	}
	
	/**
	 * mapping PUBLISHED_IN getter
	 */
	public java.lang.Integer getPublishedIn() {
		return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.PUBLISHED_IN);
	}
	
//MP-MANAGED-UPDATABLE-ENDING
 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CONTENT_TEXT-test@
	/**
	 * mapping CONTENT_TEXT setter
	 */
	public void setContentText(java.sql.Clob value) {
		setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CONTENT_TEXT, value);
	}
	
	/**
	 * mapping CONTENT_TEXT getter
	 */
	public java.sql.Clob getContentText() {
		return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CONTENT_TEXT);
	}
	
//MP-MANAGED-UPDATABLE-ENDING
 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CONTENT_PDF-test@
	/**
	 * mapping CONTENT_PDF setter
	 */
	public void setContentPdf(byte[] value) {
		setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CONTENT_PDF, value);
	}
	
	/**
	 * mapping CONTENT_PDF getter
	 */
	public byte[] getContentPdf() {
		return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CONTENT_PDF);
	}
	
//MP-MANAGED-UPDATABLE-ENDING

   //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-parent-org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CO_AUTHOR_ID-test@
	/**
	 * setter and mapper in for coAuthorId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBook.coAuthorId]
	 * REFERENCES TAuthor [TAuthor.id]
	 * </pre></code>
	 */
	public void setCoAuthorId(java.lang.Integer value) {
		setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CO_AUTHOR_ID, value);
	}
	

	/**
	 * getter and mapper out for coAuthorId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBook.coAuthorId]
	 * REFERENCES TAuthor [TAuthor.id]
	 * </pre></code>
	 */
	public java.lang.Integer getCoAuthorId() {
		return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CO_AUTHOR_ID);
	}
	

	/**
	 * fetcher of associated TAuthor via CoAuthorId
	 * <p>
	 * <code><pre>
     * FOREIGN KEY [TBook.coAuthorId]
     * REFERENCES TAuthor [TAuthor.id]
	 * </pre></code>
	 */
	public org.jooq.mp.derby.test.tables.records.TAuthorRecord fetchCoAuthorId() {
		return create()
			.selectFrom(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR)
			.where(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ID.equal(getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CO_AUTHOR_ID))) //ID
			.fetchOne();
    }
//MP-MANAGED-UPDATABLE-ENDING
   //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-parent-org.jooq.mp.derby.test.tables.TBook.__T_BOOK.AUTHOR_ID-test@
	/**
	 * setter and mapper in for authorId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBook.authorId]
	 * REFERENCES TAuthor [TAuthor.id]
	 * </pre></code>
	 */
	public void setAuthorId(java.lang.Integer value) {
		setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.AUTHOR_ID, value);
	}
	

	/**
	 * getter and mapper out for authorId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBook.authorId]
	 * REFERENCES TAuthor [TAuthor.id]
	 * </pre></code>
	 */
	public java.lang.Integer getAuthorId() {
		return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.AUTHOR_ID);
	}
	

	/**
	 * fetcher of associated TAuthor via AuthorId
	 * <p>
	 * <code><pre>
     * FOREIGN KEY [TBook.authorId]
     * REFERENCES TAuthor [TAuthor.id]
	 * </pre></code>
	 */
	public org.jooq.mp.derby.test.tables.records.TAuthorRecord fetchAuthorId() {
		return create()
			.selectFrom(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR)
			.where(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ID.equal(getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.AUTHOR_ID))) //ID
			.fetchOne();
    }
//MP-MANAGED-UPDATABLE-ENDING
   //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-parent-org.jooq.mp.derby.test.tables.TBook.__T_BOOK.DETAILS_ID-test@
	/**
	 * setter and mapper in for detailsId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBook.detailsId]
	 * REFERENCES TBookDetails [TBookDetails.id]
	 * </pre></code>
	 */
	public void setDetailsId(java.lang.Integer value) {
		setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.DETAILS_ID, value);
	}
	

	/**
	 * getter and mapper out for detailsId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBook.detailsId]
	 * REFERENCES TBookDetails [TBookDetails.id]
	 * </pre></code>
	 */
	public java.lang.Integer getDetailsId() {
		return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.DETAILS_ID);
	}
	

	/**
	 * fetcher of associated TBookDetails via DetailsId
	 * <p>
	 * <code><pre>
     * FOREIGN KEY [TBook.detailsId]
     * REFERENCES TBookDetails [TBookDetails.id]
	 * </pre></code>
	 */
	public org.jooq.mp.derby.test.tables.records.TBookDetailsRecord fetchDetailsId() {
		return create()
			.selectFrom(org.jooq.mp.derby.test.tables.TBookDetails.__T_BOOK_DETAILS)
			.where(org.jooq.mp.derby.test.tables.TBookDetails.__T_BOOK_DETAILS.ID.equal(getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.DETAILS_ID))) //ID
			.fetchOne();
    }
//MP-MANAGED-UPDATABLE-ENDING
   //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-parent-org.jooq.mp.derby.test.tables.TBook.__T_BOOK.LANGUAGE_ID-test@
	/**
	 * setter and mapper in for languageId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBook.languageId]
	 * REFERENCES TLanguage [TLanguage.id]
	 * </pre></code>
	 */
	public void setLanguageId(java.lang.Integer value) {
		setValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.LANGUAGE_ID, value);
	}
	

	/**
	 * getter and mapper out for languageId
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TBook.languageId]
	 * REFERENCES TLanguage [TLanguage.id]
	 * </pre></code>
	 */
	public java.lang.Integer getLanguageId() {
		return getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.LANGUAGE_ID);
	}
	

	/**
	 * fetcher of associated TLanguage via LanguageId
	 * <p>
	 * <code><pre>
     * FOREIGN KEY [TBook.languageId]
     * REFERENCES TLanguage [TLanguage.id]
	 * </pre></code>
	 */
	public org.jooq.mp.derby.test.tables.records.TLanguageRecord fetchLanguageId() {
		return create()
			.selectFrom(org.jooq.mp.derby.test.tables.TLanguage.__T_LANGUAGE)
			.where(org.jooq.mp.derby.test.tables.TLanguage.__T_LANGUAGE.ID.equal(getValue(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.LANGUAGE_ID))) //ID
			.fetchOne();
    }
//MP-MANAGED-UPDATABLE-ENDING
	/**
	 * Create a detached TBookRecord
	 */
	public TBookRecord() {
		super(org.jooq.mp.derby.test.tables.TBook.__T_BOOK);
	}

//MP-MANAGED-ADDED-AREA-BEGINNING @implementation@
//MP-MANAGED-ADDED-AREA-ENDING @implementation@

}
