
/**
 * This class is generated by minuteproject 4 jOOQ
 */
package org.jooq.mp.derby.test.tables.records;

import org.jooq.impl.UpdatableRecordImpl;

import org.jooq.mp.derby.test.tables.TAuthor;
import org.jooq.mp.derby.test.Test;
import org.jooq.mp.derby.test.Keys;
import java.sql.*;

//MP-MANAGED-ADDED-AREA-BEGINNING @import@
//MP-MANAGED-ADDED-AREA-ENDING @import@

//MP-MANAGED-ADDED-AREA-BEGINNING @class-annotation@
//MP-MANAGED-ADDED-AREA-ENDING @class-annotation@
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.4"},
                            comments = "This class is generated by minuteproject 4 jOOQ")
public class TAuthorRecord extends UpdatableRecordImpl<org.jooq.mp.derby.test.tables.records.TAuthorRecord> {

	private static final long serialVersionUID = 123456789;

 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-pk-test@
	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
    public void setId(java.lang.Integer value) {
        setValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ID, value);
    }
	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
    public java.lang.Integer getId() {
        return getValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ID);
    }
//MP-MANAGED-UPDATABLE-ENDING
  //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-child-TBookCoAuthorIds-test@
	/**
	 * An uncommented item
	 * 
	 */
	public java.util.List<org.jooq.mp.derby.test.tables.records.TBookRecord> fetchTBookCoAuthorIdsList() {
		return create()
			.selectFrom(org.jooq.mp.derby.test.tables.TBook.__T_BOOK)
			.where(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.CO_AUTHOR_ID.equal(getValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ID))) 
			.fetch();
	}
	
//MP-MANAGED-UPDATABLE-ENDING
  //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-child-TBookAuthorIds-test@
	/**
	 * An uncommented item
	 * 
	 */
	public java.util.List<org.jooq.mp.derby.test.tables.records.TBookRecord> fetchTBookAuthorIdsList() {
		return create()
			.selectFrom(org.jooq.mp.derby.test.tables.TBook.__T_BOOK)
			.where(org.jooq.mp.derby.test.tables.TBook.__T_BOOK.AUTHOR_ID.equal(getValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ID))) 
			.fetch();
	}
	
//MP-MANAGED-UPDATABLE-ENDING
//many2many

 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.FIRST_NAME-test@
	/**
	 * mapping FIRST_NAME setter
	 */
	public void setFirstName(java.lang.String value) {
		setValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.FIRST_NAME, value);
	}
	
	/**
	 * mapping FIRST_NAME getter
	 */
	public java.lang.String getFirstName() {
		return getValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.FIRST_NAME);
	}
	
//MP-MANAGED-UPDATABLE-ENDING
 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.LAST_NAME-test@
	/**
	 * mapping LAST_NAME setter
	 */
	public void setLastName(java.lang.String value) {
		setValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.LAST_NAME, value);
	}
	
	/**
	 * mapping LAST_NAME getter
	 */
	public java.lang.String getLastName() {
		return getValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.LAST_NAME);
	}
	
//MP-MANAGED-UPDATABLE-ENDING
 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.DATE_OF_BIRTH-test@
	/**
	 * mapping DATE_OF_BIRTH setter
	 */
	public void setDateOfBirth(java.sql.Date value) {
		setValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.DATE_OF_BIRTH, value);
	}
	
	/**
	 * mapping DATE_OF_BIRTH getter
	 */
	public java.sql.Date getDateOfBirth() {
		return getValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.DATE_OF_BIRTH);
	}
	
//MP-MANAGED-UPDATABLE-ENDING
 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.YEAR_OF_BIRTH-test@
	/**
	 * mapping YEAR_OF_BIRTH setter
	 */
	public void setYearOfBirth(java.lang.Integer value) {
		setValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.YEAR_OF_BIRTH, value);
	}
	
	/**
	 * mapping YEAR_OF_BIRTH getter
	 */
	public java.lang.Integer getYearOfBirth() {
		return getValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.YEAR_OF_BIRTH);
	}
	
//MP-MANAGED-UPDATABLE-ENDING
 //MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-record-attribute-org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ADDRESS-test@
	/**
	 * mapping ADDRESS setter
	 */
	public void setAddress(java.lang.String value) {
		setValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ADDRESS, value);
	}
	
	/**
	 * mapping ADDRESS getter
	 */
	public java.lang.String getAddress() {
		return getValue(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR.ADDRESS);
	}
	
//MP-MANAGED-UPDATABLE-ENDING

	/**
	 * Create a detached TAuthorRecord
	 */
	public TAuthorRecord() {
		super(org.jooq.mp.derby.test.tables.TAuthor.__T_AUTHOR);
	}

//MP-MANAGED-ADDED-AREA-BEGINNING @implementation@
//MP-MANAGED-ADDED-AREA-ENDING @implementation@

}
