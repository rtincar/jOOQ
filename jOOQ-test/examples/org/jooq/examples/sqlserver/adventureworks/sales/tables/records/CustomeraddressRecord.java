/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.sales.tables.records;

/**
 * This class is generated by jOOQ.
 */
public class CustomeraddressRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.sales.tables.records.CustomeraddressRecord> {

	private static final long serialVersionUID = -1498886159;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.CustomerID]
	 * REFERENCES Customer [Sales.Customer.CustomerID]
	 * </pre></code>
	 */
	public void setCustomerid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.CUSTOMERID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.CustomerID]
	 * REFERENCES Customer [Sales.Customer.CustomerID]
	 * </pre></code>
	 */
	public java.lang.Integer getCustomerid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.CUSTOMERID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.CustomerID]
	 * REFERENCES Customer [Sales.Customer.CustomerID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.sales.tables.records.CustomerRecord fetchCustomer() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customer.CUSTOMER)
			.where(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customer.CUSTOMER.CUSTOMERID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.CUSTOMERID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.AddressID]
	 * REFERENCES Address [Person.Address.AddressID]
	 * </pre></code>
	 */
	public void setAddressid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.ADDRESSID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.AddressID]
	 * REFERENCES Address [Person.Address.AddressID]
	 * </pre></code>
	 */
	public java.lang.Integer getAddressid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.ADDRESSID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.AddressID]
	 * REFERENCES Address [Person.Address.AddressID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddressRecord fetchAddress() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS)
			.where(org.jooq.examples.sqlserver.adventureworks.person.tables.Address.ADDRESS.ADDRESSID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.ADDRESSID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.AddressTypeID]
	 * REFERENCES AddressType [Person.AddressType.AddressTypeID]
	 * </pre></code>
	 */
	public void setAddresstypeid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.ADDRESSTYPEID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.AddressTypeID]
	 * REFERENCES AddressType [Person.AddressType.AddressTypeID]
	 * </pre></code>
	 */
	public java.lang.Integer getAddresstypeid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.ADDRESSTYPEID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [Sales.CustomerAddress.AddressTypeID]
	 * REFERENCES AddressType [Person.AddressType.AddressTypeID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddresstypeRecord fetchAddresstype() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE)
			.where(org.jooq.examples.sqlserver.adventureworks.person.tables.Addresstype.ADDRESSTYPE.ADDRESSTYPEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.ADDRESSTYPEID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setRowguid(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.ROWGUID, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getRowguid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.ROWGUID);
	}

	/**
	 * An uncommented item
	 */
	public void setModifieddate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.MODIFIEDDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getModifieddate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS.MODIFIEDDATE);
	}

	/**
	 * Create a detached CustomeraddressRecord
	 */
	public CustomeraddressRecord() {
		super(org.jooq.examples.sqlserver.adventureworks.sales.tables.Customeraddress.CUSTOMERADDRESS);
	}
}
