/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.humanresources.tables.records;

/**
 * This class is generated by jOOQ.
 */
public class EmployeeRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.humanresources.tables.records.EmployeeRecord> {

	private static final long serialVersionUID = 2144845740;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setEmployeeid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.lang.Integer getEmployeeid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.sqlserver.adventureworks.humanresources.tables.records.EmployeeRecord> fetchEmployeeList() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE)
			.where(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.MANAGERID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.sqlserver.adventureworks.humanresources.tables.records.EmployeeaddressRecord> fetchEmployeeaddressList() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employeeaddress.EMPLOYEEADDRESS)
			.where(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employeeaddress.EMPLOYEEADDRESS.EMPLOYEEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.sqlserver.adventureworks.humanresources.tables.records.EmployeedepartmenthistoryRecord> fetchEmployeedepartmenthistoryList() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employeedepartmenthistory.EMPLOYEEDEPARTMENTHISTORY)
			.where(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employeedepartmenthistory.EMPLOYEEDEPARTMENTHISTORY.EMPLOYEEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.sqlserver.adventureworks.humanresources.tables.records.EmployeepayhistoryRecord> fetchEmployeepayhistoryList() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employeepayhistory.EMPLOYEEPAYHISTORY)
			.where(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employeepayhistory.EMPLOYEEPAYHISTORY.EMPLOYEEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.sqlserver.adventureworks.humanresources.tables.records.JobcandidateRecord> fetchJobcandidateList() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Jobcandidate.JOBCANDIDATE)
			.where(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Jobcandidate.JOBCANDIDATE.EMPLOYEEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.sqlserver.adventureworks.purchasing.tables.records.PurchaseorderheaderRecord> fetchPurchaseorderheaderList() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Purchaseorderheader.PURCHASEORDERHEADER)
			.where(org.jooq.examples.sqlserver.adventureworks.purchasing.tables.Purchaseorderheader.PURCHASEORDERHEADER.EMPLOYEEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.jooq.examples.sqlserver.adventureworks.sales.tables.records.SalespersonRecord> fetchSalespersonList() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.sales.tables.Salesperson.SALESPERSON)
			.where(org.jooq.examples.sqlserver.adventureworks.sales.tables.Salesperson.SALESPERSON.SALESPERSONID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 */
	public void setNationalidnumber(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.NATIONALIDNUMBER, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getNationalidnumber() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.NATIONALIDNUMBER);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [HumanResources.Employee.ContactID]
	 * REFERENCES Contact [Person.Contact.ContactID]
	 * </pre></code>
	 */
	public void setContactid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.CONTACTID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [HumanResources.Employee.ContactID]
	 * REFERENCES Contact [Person.Contact.ContactID]
	 * </pre></code>
	 */
	public java.lang.Integer getContactid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.CONTACTID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [HumanResources.Employee.ContactID]
	 * REFERENCES Contact [Person.Contact.ContactID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.person.tables.records.ContactRecord fetchContact() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT)
			.where(org.jooq.examples.sqlserver.adventureworks.person.tables.Contact.CONTACT.CONTACTID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.CONTACTID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setLoginid(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.LOGINID, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getLoginid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.LOGINID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [HumanResources.Employee.ManagerID]
	 * REFERENCES Employee [HumanResources.Employee.EmployeeID]
	 * </pre></code>
	 */
	public void setManagerid(java.lang.Integer value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.MANAGERID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [HumanResources.Employee.ManagerID]
	 * REFERENCES Employee [HumanResources.Employee.EmployeeID]
	 * </pre></code>
	 */
	public java.lang.Integer getManagerid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.MANAGERID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [HumanResources.Employee.ManagerID]
	 * REFERENCES Employee [HumanResources.Employee.EmployeeID]
	 * </pre></code>
	 */
	public org.jooq.examples.sqlserver.adventureworks.humanresources.tables.records.EmployeeRecord fetchEmployee() {
		return create()
			.selectFrom(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE)
			.where(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.EMPLOYEEID.equal(getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.MANAGERID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setTitle(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.TITLE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getTitle() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.TITLE);
	}

	/**
	 * An uncommented item
	 */
	public void setBirthdate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.BIRTHDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getBirthdate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.BIRTHDATE);
	}

	/**
	 * An uncommented item
	 */
	public void setMaritalstatus(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.MARITALSTATUS, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getMaritalstatus() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.MARITALSTATUS);
	}

	/**
	 * An uncommented item
	 */
	public void setGender(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.GENDER, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getGender() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.GENDER);
	}

	/**
	 * An uncommented item
	 */
	public void setHiredate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.HIREDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getHiredate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.HIREDATE);
	}

	/**
	 * An uncommented item
	 */
	public void setSalariedflag(java.lang.Boolean value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.SALARIEDFLAG, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Boolean getSalariedflag() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.SALARIEDFLAG);
	}

	/**
	 * An uncommented item
	 */
	public void setVacationhours(java.lang.Short value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.VACATIONHOURS, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Short getVacationhours() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.VACATIONHOURS);
	}

	/**
	 * An uncommented item
	 */
	public void setSickleavehours(java.lang.Short value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.SICKLEAVEHOURS, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Short getSickleavehours() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.SICKLEAVEHOURS);
	}

	/**
	 * An uncommented item
	 */
	public void setCurrentflag(java.lang.Boolean value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.CURRENTFLAG, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Boolean getCurrentflag() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.CURRENTFLAG);
	}

	/**
	 * An uncommented item
	 */
	public void setRowguid(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.ROWGUID, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getRowguid() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.ROWGUID);
	}

	/**
	 * An uncommented item
	 */
	public void setModifieddate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.MODIFIEDDATE, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getModifieddate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE.MODIFIEDDATE);
	}

	/**
	 * Create a detached EmployeeRecord
	 */
	public EmployeeRecord() {
		super(org.jooq.examples.sqlserver.adventureworks.humanresources.tables.Employee.EMPLOYEE);
	}
}
