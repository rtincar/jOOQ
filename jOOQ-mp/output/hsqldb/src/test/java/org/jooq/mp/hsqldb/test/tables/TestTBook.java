
/**
 * This class is generated by minuteproject 4 jOOQ
 */
package org.jooq.mp.hsqldb.test.tables;

import org.jooq.mp.hsqldb.test.tables.records.TBookRecord;
import org.jooq.mp.hsqldb.test.Test;
import org.jooq.mp.hsqldb.test.Keys;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import org.jooq.mp.hsqldb.test.TestFactory;
import static org.jooq.mp.hsqldb.test.tables.TBook.__T_BOOK;

import org.jooq.Record;
import org.jooq.Result;
import org.junit.Test;

//MP-MANAGED-ADDED-AREA-BEGINNING @import@
//MP-MANAGED-ADDED-AREA-ENDING @import@

//MP-MANAGED-ADDED-AREA-BEGINNING @class-annotation@
//MP-MANAGED-ADDED-AREA-ENDING @class-annotation@
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.4"},
                            comments = "This class is generated by minuteproject 4 jOOQ")
public class TestTBook {

	@Test
	public void testTBook () {
		Connection conn = null;
		String userName = "sa";
		String password = "";
		String url = "jdbc:hsqldb:hsql://localhost";

		try {
			Class.forName("org.hsqldb.jdbcDriver").newInstance();
			conn = DriverManager.getConnection(url, userName, password);
			TestFactory create = new TestFactory(conn);

//MP-MANAGED-UPDATABLE-BEGINNING-DISABLE @jooq-unittest-testTBook-test@
			// write your own tests, just set DISABLE to ENABLE in the comment above
			// future generation will not erase your code ;)
			Result<Record> result = create.select().from(__T_BOOK).limit(1).fetch();
			for (Record r : result) {
                 java.lang.Integer id = r.getValue(__T_BOOK.ID);
                   java.lang.Integer authorId = r.getValue(__T_BOOK.AUTHOR_ID);
                   java.lang.Integer coAuthorId = r.getValue(__T_BOOK.CO_AUTHOR_ID);
                   java.lang.Integer detailsId = r.getValue(__T_BOOK.DETAILS_ID);
                   java.lang.Integer languageId = r.getValue(__T_BOOK.LANGUAGE_ID);
				System.out.println(
                     "id : "+ id +
                       "authorId : "+ authorId +
                       "coAuthorId : "+ coAuthorId +
                       "detailsId : "+ detailsId +
                       "languageId : "+ languageId +
                    ""
					);
//MP-MANAGED-UPDATABLE-ENDING
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (conn != null) {
				try {
					conn.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}
    
//MP-MANAGED-ADDED-AREA-BEGINNING @implementation@
//MP-MANAGED-ADDED-AREA-ENDING @implementation@	

}
