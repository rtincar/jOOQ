/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.oracle.sys.packages;

/**
 * This class is generated by jOOQ.
 *
 * Convenience access to all stored procedures and functions in DBMS_XPLAN
 */
public final class DbmsXplan extends org.jooq.impl.PackageImpl {

	private static final long serialVersionUID = 407039933;

	/**
	 * The singleton instance of DBMS_XPLAN
	 */
	public static org.jooq.examples.oracle.sys.packages.DbmsXplan DBMS_XPLAN = new org.jooq.examples.oracle.sys.packages.DbmsXplan();

	/**
	 * Invoke DISPLAY
	 *
	 * @param tableName
	 * @param statementId
	 * @param format
	 * @param filterPreds
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object display(org.jooq.Configuration configuration, java.lang.String tableName, java.lang.String statementId, java.lang.String format, java.lang.String filterPreds) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.Display f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.Display();
		f.setTableName(tableName);
		f.setStatementId(statementId);
		f.setFormat(format);
		f.setFilterPreds(filterPreds);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get DISPLAY as a field
	 *
	 * @param tableName
	 * @param statementId
	 * @param format
	 * @param filterPreds
	 */
	public static org.jooq.Field<java.lang.Object> display(java.lang.String tableName, java.lang.String statementId, java.lang.String format, java.lang.String filterPreds) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.Display f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.Display();
		f.setTableName(tableName);
		f.setStatementId(statementId);
		f.setFormat(format);
		f.setFilterPreds(filterPreds);

		return f.asField();
	}

	/**
	 * Get DISPLAY as a field
	 *
	 * @param tableName
	 * @param statementId
	 * @param format
	 * @param filterPreds
	 */
	public static org.jooq.Field<java.lang.Object> display(org.jooq.Field<java.lang.String> tableName, org.jooq.Field<java.lang.String> statementId, org.jooq.Field<java.lang.String> format, org.jooq.Field<java.lang.String> filterPreds) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.Display f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.Display();
		f.setTableName(tableName);
		f.setStatementId(statementId);
		f.setFormat(format);
		f.setFilterPreds(filterPreds);

		return f.asField();
	}

	/**
	 * Invoke DISPLAY_AWR
	 *
	 * @param sqlId
	 * @param planHashValue
	 * @param dbId
	 * @param format
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object displayAwr(org.jooq.Configuration configuration, java.lang.String sqlId, java.math.BigInteger planHashValue, java.math.BigInteger dbId, java.lang.String format) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayAwr f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayAwr();
		f.setSqlId(sqlId);
		f.setPlanHashValue(planHashValue);
		f.setDbId(dbId);
		f.setFormat(format);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get DISPLAY_AWR as a field
	 *
	 * @param sqlId
	 * @param planHashValue
	 * @param dbId
	 * @param format
	 */
	public static org.jooq.Field<java.lang.Object> displayAwr(java.lang.String sqlId, java.math.BigInteger planHashValue, java.math.BigInteger dbId, java.lang.String format) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayAwr f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayAwr();
		f.setSqlId(sqlId);
		f.setPlanHashValue(planHashValue);
		f.setDbId(dbId);
		f.setFormat(format);

		return f.asField();
	}

	/**
	 * Get DISPLAY_AWR as a field
	 *
	 * @param sqlId
	 * @param planHashValue
	 * @param dbId
	 * @param format
	 */
	public static org.jooq.Field<java.lang.Object> displayAwr(org.jooq.Field<java.lang.String> sqlId, org.jooq.Field<java.math.BigInteger> planHashValue, org.jooq.Field<java.math.BigInteger> dbId, org.jooq.Field<java.lang.String> format) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayAwr f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayAwr();
		f.setSqlId(sqlId);
		f.setPlanHashValue(planHashValue);
		f.setDbId(dbId);
		f.setFormat(format);

		return f.asField();
	}

	/**
	 * Invoke DISPLAY_CURSOR
	 *
	 * @param sqlId
	 * @param cursorChildNo
	 * @param format
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object displayCursor(org.jooq.Configuration configuration, java.lang.String sqlId, java.math.BigInteger cursorChildNo, java.lang.String format) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayCursor f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayCursor();
		f.setSqlId(sqlId);
		f.setCursorChildNo(cursorChildNo);
		f.setFormat(format);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get DISPLAY_CURSOR as a field
	 *
	 * @param sqlId
	 * @param cursorChildNo
	 * @param format
	 */
	public static org.jooq.Field<java.lang.Object> displayCursor(java.lang.String sqlId, java.math.BigInteger cursorChildNo, java.lang.String format) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayCursor f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayCursor();
		f.setSqlId(sqlId);
		f.setCursorChildNo(cursorChildNo);
		f.setFormat(format);

		return f.asField();
	}

	/**
	 * Get DISPLAY_CURSOR as a field
	 *
	 * @param sqlId
	 * @param cursorChildNo
	 * @param format
	 */
	public static org.jooq.Field<java.lang.Object> displayCursor(org.jooq.Field<java.lang.String> sqlId, org.jooq.Field<java.math.BigInteger> cursorChildNo, org.jooq.Field<java.lang.String> format) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayCursor f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplayCursor();
		f.setSqlId(sqlId);
		f.setCursorChildNo(cursorChildNo);
		f.setFormat(format);

		return f.asField();
	}

	/**
	 * Invoke DISPLAY_SQLSET
	 *
	 * @param sqlsetName
	 * @param sqlId
	 * @param planHashValue
	 * @param format
	 * @param sqlsetOwner
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object displaySqlset(org.jooq.Configuration configuration, java.lang.String sqlsetName, java.lang.String sqlId, java.math.BigInteger planHashValue, java.lang.String format, java.lang.String sqlsetOwner) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplaySqlset f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplaySqlset();
		f.setSqlsetName(sqlsetName);
		f.setSqlId(sqlId);
		f.setPlanHashValue(planHashValue);
		f.setFormat(format);
		f.setSqlsetOwner(sqlsetOwner);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get DISPLAY_SQLSET as a field
	 *
	 * @param sqlsetName
	 * @param sqlId
	 * @param planHashValue
	 * @param format
	 * @param sqlsetOwner
	 */
	public static org.jooq.Field<java.lang.Object> displaySqlset(java.lang.String sqlsetName, java.lang.String sqlId, java.math.BigInteger planHashValue, java.lang.String format, java.lang.String sqlsetOwner) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplaySqlset f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplaySqlset();
		f.setSqlsetName(sqlsetName);
		f.setSqlId(sqlId);
		f.setPlanHashValue(planHashValue);
		f.setFormat(format);
		f.setSqlsetOwner(sqlsetOwner);

		return f.asField();
	}

	/**
	 * Get DISPLAY_SQLSET as a field
	 *
	 * @param sqlsetName
	 * @param sqlId
	 * @param planHashValue
	 * @param format
	 * @param sqlsetOwner
	 */
	public static org.jooq.Field<java.lang.Object> displaySqlset(org.jooq.Field<java.lang.String> sqlsetName, org.jooq.Field<java.lang.String> sqlId, org.jooq.Field<java.math.BigInteger> planHashValue, org.jooq.Field<java.lang.String> format, org.jooq.Field<java.lang.String> sqlsetOwner) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplaySqlset f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.DisplaySqlset();
		f.setSqlsetName(sqlsetName);
		f.setSqlId(sqlId);
		f.setPlanHashValue(planHashValue);
		f.setFormat(format);
		f.setSqlsetOwner(sqlsetOwner);

		return f.asField();
	}

	/**
	 * Invoke PREPARE_RECORDS
	 *
	 * @param planCur
	 * @param iFormatFlags
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object prepareRecords(org.jooq.Configuration configuration, org.jooq.Result<org.jooq.Record> planCur, java.lang.Integer iFormatFlags) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.PrepareRecords f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.PrepareRecords();
		f.setPlanCur(planCur);
		f.setIFormatFlags(iFormatFlags);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get PREPARE_RECORDS as a field
	 *
	 * @param planCur
	 * @param iFormatFlags
	 */
	public static org.jooq.Field<java.lang.Object> prepareRecords(org.jooq.Result<org.jooq.Record> planCur, java.lang.Integer iFormatFlags) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.PrepareRecords f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.PrepareRecords();
		f.setPlanCur(planCur);
		f.setIFormatFlags(iFormatFlags);

		return f.asField();
	}

	/**
	 * Get PREPARE_RECORDS as a field
	 *
	 * @param planCur
	 * @param iFormatFlags
	 */
	public static org.jooq.Field<java.lang.Object> prepareRecords(org.jooq.Field<org.jooq.Result<org.jooq.Record>> planCur, org.jooq.Field<java.lang.Integer> iFormatFlags) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.PrepareRecords f = new org.jooq.examples.oracle.sys.packages.dbms_xplan.PrepareRecords();
		f.setPlanCur(planCur);
		f.setIFormatFlags(iFormatFlags);

		return f.asField();
	}

	/**
	 * Invoke VALIDATE_FORMAT
	 *
	 * @param returnValue OUT parameter
	 * @param hasplanstats IN parameter
	 * @param format IN parameter
	 * @param formatFlags OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer validateFormat(org.jooq.Configuration configuration, java.lang.Object hasplanstats, java.lang.String format) {
		org.jooq.examples.oracle.sys.packages.dbms_xplan.ValidateFormat p = new org.jooq.examples.oracle.sys.packages.dbms_xplan.ValidateFormat();
		p.setHasplanstats(hasplanstats);
		p.setFormat(format);

		p.execute(configuration);
		return p.getFormatFlags();
	}
	/**
	 * No further instances allowed
	 */
	private DbmsXplan() {
		super("DBMS_XPLAN", org.jooq.examples.oracle.sys.Sys.SYS);
	}
}
